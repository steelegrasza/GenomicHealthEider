ROH Code

#Subset ROH lengths into a new document
awk '{print$2}' roh_sorted_indiv.txt > roh_lengths.txt

#Isolate segments that are 100-300 KB in size
cat roh_lengths.txt | awk '{if($1>100)print$1}' | awk '{if($1<=300)print$1}' | sort > 100-300.txt

#Determine the number of segments that are 100-300 KB in size
wc -l 100-300.txt | awk '{print $1/35}'

#Calculate the total length of all segments 100-300 KB in size (N=35)
awk '{s+=$1} END {print s/35}' 100-300.txt

#Isolate segments that are 300-500 KB in size
cat roh_lengths.txt | awk '{if($1>300)print$1}' | awk '{if($1<=500)print$1}' | sort > 300-500.txt

#Determine the number of segments that are 300-500 KB in size
wc -l 300-500.txt | awk '{print $1/35}'

#Calculate the total length of all segments 300-500 KB in size (N=35)
awk '{s+=$1} END {print s/35}' 300-500.txt

#Isolate segments that are 500-1000 KB in size
cat roh_lengths.txt | awk '{if($1>500)print$1}' | awk '{if($1<=1000)print$1}' | sort > 500-1000.txt

#Calculate the total length of all segments 500-1000 KB in size (N=35)
awk '{s+=$1} END {print s/35}' 500-1000.txt

#Determine the number of segments that are 500-1000 KB in size
wc -l 500-1000.txt | awk '{print $1/35}'

#Isolate segments that are 500-1000 KB in size
cat roh_lengths.txt | awk '{if($1>1000)print$1}' | sort > 1000+.txt

#Determine the number of segments that are 1000+ KB in size
wc -l 1000+.txt | awk '{print $1/35}'

#Calculate the total length of all segments 1000+ KB in size (N=35)
awk '{s+=$1} END {print s/35}' 1000+.txt

#Read the document containing ROH lengths
roh <- read.delim("roh_lengths.txt")

#Generate a summary
summary(roh$Lengths)

#Plot a histogram
hist(roh$Lengths,breaks=500,xlim=c(0,500),
     ylab="Frequency",xlab="Length (KB)",
     main="ROH ditribution by length")


ggplot(roh_summary, aes(x = ROH_Category, y = Percentage_ROH, fill = Group)) +
  geom_bar(stat = "identity", position = position_dodge(), color = "black", alpha = 0.6) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  
  labs(
    x = "ROH Length Class (KB)",
    y = "Percentage of ROH in Each Length Category (%)",  # matches caption
    fill = "Group"
  ) +
  scale_fill_manual(values = c("Survivors" = "pink", "Deceased" = "orange", "High-Immune" = "lightgreen")) +
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0.5, color = "black"),
    axis.text.y = element_text(color = "black"),
    axis.title = element_text(color = "black", face = ),
    legend.text = element_text(color = "black"),
    legend.title = element_text(color = "black", face = ),
    axis.line = element_line(color = "black")
  )
